@all
Feature: Inicio de sesi√≥n y acceso a Pricing

  @ValidCredentials @ignore #caso 1
  Scenario: Inicio de  sesi√≥n con credenciales validas
    Given "User" abre la p√°gina web
    When Inicia sesi√≥n con sus credenciales
    And Debe darle click al boton de pricing
    Then Debe iniciar sesion correctamente a pricing

  @InValidCredentialsCorreo @ignore ##caso 2
  Scenario: Inicio de  sesi√≥n con credenciales invalidas correo
    Given "User" abre la p√°gina web
    When Inicia sesi√≥n con sus credenciales invalidas correo
    Then Debe ver el mensaje de error "Invalid credentials"

  @InValidCredentialsContrase√±a @ignore ##caso 3
  Scenario: Inicio de  sesi√≥n con credenciales invalidas contrase√±a
    Given "User" abre la p√°gina web
    When Inicia sesi√≥n con sus credenciales invalidas contrase√±a
    Then Debe ver el mensaje de error "Invalid credentials"

  @BlankUsername @ignore  ##caso 4
  Scenario: Inicio de sesi√≥n con nombre de usuario en blanco
    Given "User" abre la p√°gina web
    When Inicia sesi√≥n con sus credenciales correo en blanco
    Then Debe ver el mensaje de error "Required" debajo del nombre de usuario

  @BlankPassword ##caso 5
  Scenario: Inicio de  sesi√≥n con contrasena en blanco
    Given "User" abre la p√°gina web
    When Intenta Iniciar sesi√≥n con sus credenciales contrasena en blanco
    Then Debe ver el mensaje de error "Required" debajo de la contrasena


  @ValidCredential ##caso 6
  Scenario: Usuario inicia sesion  accede al formulario
    Given "User" abre la p√°gina web
    When Inicia sesi√≥n con sus credenciales
    And Debe iniciar sesion correctamente
    And Debe darle click al boton de pricing
    And Debe darle click al boton de cotizador
    Then Debe entrar a la pagina del formulario


#üìÑ Documentaci√≥n Archivo: LoginPage.feature
#
#üìå Descripci√≥n General:
#
#Este archivo define escenarios de prueba de comportamiento (BDD) para la funcionalidad de login del sistema HRM (Human Resource Management).
# Usa el lenguaje Gherkin, lo cual permite una lectura clara y estructurada tanto para testers como para stakeholders no t√©cnicos.
#
#üéØ Prop√≥sito:
#Validar distintos comportamientos del sistema cuando un usuario intenta iniciar sesi√≥n con diferentes combinaciones de credenciales.
#‚öôÔ∏è ¬øPor qu√© se implementa?
#Se implementa para automatizar pruebas funcionales sobre el m√≥dulo de autenticaci√≥n de la aplicaci√≥n, asegurando que los mensajes y flujos de
# login se comporten correctamente con distintos tipos de entradas:
#Credenciales v√°lidas.
#Usuario inv√°lido.
#Usuario vac√≠o.
#Contrase√±a vac√≠a.
#
#üß© Estructura y Dependencias:
#
#Cada paso (Given, When, Then) est√° vinculado con m√©todos en clases Java conocidas como Step Definitions, las cuales implementan la
# l√≥gica que ejecuta lo descrito en los escenarios. Estas definiciones est√°n escritas normalmente en clases como:
#
#LoginPageDefinitions.java
#
#LoginActions.java
#
#LoginValidation.java
#
#
#Adem√°s, interact√∫a con clases de Screenplay como:
#
#Tasks ‚Üí para acciones como abrir la p√°gina o iniciar sesi√≥n.
#
#Questions ‚Üí para validar resultados esperados.
#
#UI Elements ‚Üí para ubicar campos de usuario, contrase√±a y mensajes de error.
#
#
#
#---
#
#üìö Escenarios definidos:
#
#‚úÖ @ValidCredentials
#
#Objetivo: Verificar que el usuario pueda iniciar sesi√≥n exitosamente con las credenciales correctas.
#
#‚ùå @InValidCredentials
#
#Objetivo: Validar que el sistema muestre el mensaje de error "Invalid credentials" si se ingresa un usuario o contrase√±a incorrecta.
#
#‚ö†Ô∏è @BlankUsername
#
#Objetivo: Validar que el sistema exija el nombre de usuario cuando se deja en blanco y muestre "Required" debajo del campo de usuario.
#
#‚ö†Ô∏è @BlankPassword
#
#Objetivo: Validar que el sistema exija la contrase√±a cuando se deja en blanco y muestre "Required" debajo del campo de contrase√±a.
#
#
#---
#
#üîó Clases relacionadas:
#
#Este archivo .feature depende de:
#
#LoginPageDefinitions.java ‚Üí Implementa los pasos Given, When, Then.
#
#OpenWebPage, DoLogin, ValidateErrorMessages ‚Üí Clases Task y Question que modelan la l√≥gica del login.
#
#LoginPage.java ‚Üí Clase PageObject que contiene los localizadores de elementos web.